# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~



# set this if you want to proxy a web site ( say w3c.org to check out WebID )
#GET     /*rg                       controllers.AuthProxyApp.proxy(rg)

# Home page
#GET     /test/webid/:rg             controllers.BasicApp.webId(rg)

#Home page with doc
GET           /                                        controllers.MainController.index
GET           /2013                                    controllers.MainController.about



GET           /srv/createSubdomain                     controllers.Subdomains.createSubdomain
POST          /srv/createUserSpaceRequest              controllers.Subdomains.createUserSpaceRequest
GET           /srv/subdomainWaitingConfirmation        controllers.Subdomains.subdomainWaitingConfirmation
GET           /srv/confirmSubdomain                    controllers.Subdomains.confirmSubdomain
POST          /srv/createCertificate                   controllers.Subdomains.createCertificate


# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                            controllers.Assets.at(path="/public", file)

GET           /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.get(file)
PUT           /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.put(file)
POST          /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.post(file)
DELETE        /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.delete(file)
PATCH         /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.patch(file)
HEAD          /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.head(file)
OPTIONS       /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.options(file)
SEARCH        /2013/$file<.*>                          controllers.ldp.ReadWriteWebController.search(file)

POST          /srv/certgen                             controllers.ClientCertificateApp.generate
GET           /srv/certgen                             controllers.ClientCertificateApp.get
GET           /srv/cors                                controllers.CORSProxyController.action(url: Option[String])
GET           /srv/displayCert                         controllers.Certificates.display()